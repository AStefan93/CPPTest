# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  push:
    branches: ["**"]
  # schedule:
  #   - cron: "45 8 * * 4"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  BuildImage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v38.1.3
        with:
          files: .devcontainer/Dockerfile
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build docker image
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: docker build -t local -f .devcontainer/Dockerfile .
      - name: Tag docker image
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: docker image tag local astefan93/cpp:latest
      - name: Push docker image
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: docker push astefan93/cpp:latest

  UbuntuLatest:
    runs-on: ubuntu-latest
    needs: BuildImage
    strategy:
      matrix:
        compiler: [gcc, clang]
        configuration: [debug, release]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Run container
        run: docker run --name localContainer -idt --volume $PWD:/srv astefan93/cpp:latest
      - name: Build Bazel
        run: docker exec -w/srv localContainer sudo bazel build --config ${{matrix.compiler}}_${{ matrix.configuration }} ...
      - name: Configure CMake
        run: docker exec -w/srv localContainer sudo cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/clang-14 -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/clang++-14 -S/srv -B/srv/build -G "Unix Makefiles"
      - name: Build CMake
        run: docker exec -w/srv localContainer sudo cmake --build /srv/build  --config Debug --target Tutorial -j 18 --
      - name: Generate compile commands
        run: docker exec -w/srv localContainer sudo bazel run @hedron_compile_commands//:refresh_all -- --config=${{matrix.compiler}}_${{ matrix.configuration }}
      - name: Run tests
        run: docker exec -w/srv localContainer sudo bazel test --config ${{matrix.compiler}}_${{ matrix.configuration }} --test_output=all ...
      - name: Generate coverage report data
        if: ${{ matrix.configuration=='debug' }}
        run: docker exec -w/srv localContainer sudo bazel coverage --combined_report=lcov ...
      # - name: Generate html format coverage report
      #   run: docker exec -w/srv localContainer sudo genhtml --output genhtml "$(bazel info output_path)/_coverage/_coverage_report.dat"
      - name: IWYU
        run: docker exec -w/srv localContainer sudo bazel build --config=iwyu ...
      - name: cppcheck
        run: docker exec -w/srv localContainer sudo cppcheck src --enable=all --inconclusive --library=posix --project=compile_commands.json -iexternal -ibazel-out --suppress-xml=src/cppcheck_suppressions.xml
      - name: clang-tidy check
        run: docker exec -w/srv localContainer sudo clang-tidy src/applications/addressbook/addressbook.cpp
      - name: Stop container
        run: docker stop localContainer
